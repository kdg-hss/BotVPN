#!/bin/bash

# ==========================
# Colors
# ==========================
green="\e[38;5;82m"
red="\e[38;5;196m"
neutral="\e[0m"
orange="\e[38;5;130m"
blue="\e[38;5;39m"
yellow="\e[38;5;226m"
purple="\e[38;5;141m"
bold_white="\e[1;37m"
reset="\e[0m"
pink="\e[38;5;205m"

# ==========================
# Rainbow text function
# ==========================
print_rainbow() {
    local text="$1"
    local length=${#text}
    local start_color=(0 5 0)
    local mid_color=(0 200 0)
    local end_color=(0 5 0)

    for ((i = 0; i < length; i++)); do
        local progress=$(echo "scale=2; $i / ($length - 1)" | bc)
        if (($(echo "$progress < 0.5" | bc -l))); then
            local factor=$(echo "scale=2; $progress * 2" | bc)
            r=$(echo "scale=0; (${start_color[0]} * (1-$factor) + ${mid_color[0]} * $factor)/1" | bc)
            g=$(echo "scale=0; (${start_color[1]} * (1-$factor) + ${mid_color[1]} * $factor)/1" | bc)
            b=$(echo "scale=0; (${start_color[2]} * (1-$factor) + ${mid_color[2]} * $factor)/1" | bc)
        else
            local factor=$(echo "scale=2; ($progress - 0.5) * 2" | bc)
            r=$(echo "scale=0; (${mid_color[0]} * (1-$factor) + ${end_color[0]} * $factor)/1" | bc)
            g=$(echo "scale=0; (${mid_color[1]} * (1-$factor) + ${end_color[1]} * $factor)/1" | bc)
            b=$(echo "scale=0; (${mid_color[2]} * (1-$factor) + ${end_color[2]} * $factor)/1" | bc)
        fi
        printf "\e[38;2;%d;%d;%dm%s" "$r" "$g" "$b" "${text:$i:1}"
    done
    echo -e "$reset"
}

# ==========================
# Check systemctl status
# ==========================
cek_status() {
    status=$(systemctl is-active --quiet $1 && echo "aktif" || echo "nonaktif")
    if [ "$status" = "aktif" ]; then
        echo -e "${green}GOOD${neutral}"
    else
        echo -e "${red}BAD${neutral}"
    fi
}

# ==========================
# Setup Bot
# ==========================
setup_bot() {
    # Install bc if missing
    if ! command -v bc >/dev/null 2>&1; then
        apt-get update
        apt-get install -y bc
    fi

    # Install Node.js if not exist
    if ! dpkg -s nodejs >/dev/null 2>&1; then
        curl -fsSL https://deb.nodesource.com/setup_22.x | bash -
        apt-get install -y nodejs
        npm install -g npm@latest
    else
        echo -e "${green}Node.js sudah terinstall, skip...${neutral}"
    fi

    # Clone bot repo jika belum ada
    if [ ! -f /root/BotVPN/app.js ]; then
        git clone https://github.com/kdg-hss/BotVPN.git /root/BotVPN
    fi

    # Install npm dependencies
    npm install --prefix /root/BotVPN sqlite3 express crypto telegraf axios dotenv --save

    # Beri executable pada file .js dan script
    chmod +x /root/BotVPN/*.js
    chmod +x /root/BotVPN/install
}

# ==========================
# Setup server bot
# ==========================
server_app() {
    clear
    echo -e "${orange}─────────────────────────────────────────${neutral}"
    echo -e "   ${green}.:::. BOT SELLVPN TELEGRAM .:::.   ${neutral}"
    echo -e "${orange}─────────────────────────────────────────${neutral}"
    
    # Inisialisasi variabel
    adminid=""
    namastore=""
    keypaydisini=""
    
    # Input user
    read -p "Masukkan token bot: " token
    while [ -z "$token" ]; do
        read -p "Masukkan token bot: " token
    done

    read -p "Masukkan admin ID: " adminid
    while [ -z "$adminid" ]; do
        read -p "Masukkan admin ID: " adminid
    done

    read -p "Masukkan nama store: " namastore
    while [ -z "$namastore" ]; do
        read -p "Masukkan nama store: " namastore
    done

    read -p "Masukkan Keypaydisini: " keypaydisini
    while [ -z "$keypaydisini" ]; do
        read -p "Masukkan Keypaydisini: " keypaydisini
    done

    # Buat file vars.json
    cat >/root/BotVPN/.vars.json <<EOF
{
  "BOT_TOKEN": "$token",
  "USER_ID": "$adminid",
  "PAYDISINI_KEY": "$keypaydisini",
  "NAMA_STORE": "$namastore",
  "PORT": "50123"
}
EOF

    # Buat systemd service
    cat >/etc/systemd/system/sellvpn.service <<EOF
[Unit]
Description=App Bot sellvpn Service
After=network.target

[Service]
ExecStart=/bin/bash /usr/bin/sellvpn
Restart=always
User=root
Environment=PATH=/usr/bin:/usr/local/bin
Environment=NODE_ENV=production
WorkingDirectory=/root/BotVPN

[Install]
WantedBy=multi-user.target
EOF

    # Buat script server_sellvpn (cron)
    cat >/usr/bin/server_sellvpn <<EOF
#!/bin/bash
USER_ID=$adminid
BOT_TOKEN=$token
curl -s -F chat_id="\$USER_ID" -F document=@"/root/BotVPN/sellvpn.db" "https://api.telegram.org/bot\$BOT_TOKEN/sendDocument" >/dev/null 2>&1
EOF

    # Buat script sellvpn
    cat >/usr/bin/sellvpn <<EOF
#!/bin/bash
cd /root/BotVPN
node app.js
EOF

    chmod +x /usr/bin/server_sellvpn
    chmod +x /usr/bin/sellvpn

    # Buat cron job
    cat >/etc/cron.d/server_sellvpn <<EOF
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
0 */6 * * * root /usr/bin/server_sellvpn
EOF
    echo "" >> /etc/cron.d/server_sellvpn

    # Reload systemd
    systemctl daemon-reload
    systemctl enable sellvpn.service
    systemctl restart sellvpn.service
    service cron restart

    # Tampilkan status
    printf "\033[5A\033[0J"
    echo -e "       Status Server is "$(cek_status sellvpn.service)""
    echo -e "${orange}─────────────────────────────────────────${neutral}"
    echo -e "${green}Bot sudah terinstall dan running.${neutral}"
    echo -e "${green}Ketik ${bold_white}/start${neutral} atau ${bold_white}menu${neutral} di Telegram bot${neutral}"
}

# ==========================
# Main
# ==========================
if [[ ${1} == "sellvpn" ]]; then
    setup_bot
    server_app
else
    echo -e "${red}Invalid command. Gunakan: ${yellow}start sellvpn${neutral}"
    exit 1
fi
